generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id              String    @id @default(uuid())
  phone           String    @unique
  name            String?
  email           String?
  password        String?
  defaultCurrency String?
  countryCurrency String?
  planId          String
  active          Boolean   @default(true)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  transactions    Transaction[]
  plan            Plan      @relation(fields: [planId], references: [id])

  // Campos para integração com o Stripe
  stripeCustomerId         String?   @unique @map("stripe_customer_id")
  stripeSubscriptionId     String?   @unique @map("stripe_subscription_id")
  stripePriceId            String?   @map("stripe_price_id")
  stripeCurrentPeriodEnd   DateTime? @map("stripe_current_period_end")
}

enum TransactionType {
  INCOME
  EXPENSE
}

model Transaction {
  id            String    @id @default(uuid())
  userId        String
  description   String
  amountLocal   Decimal   @db.Decimal(14, 2)
  currencyLocal String
  amountBase    Decimal   @db.Decimal(14, 2)
  currencyBase  String
  categoryId    String?
  type          TransactionType?
  expenseDate   DateTime  @default(now())
  createdAt     DateTime  @default(now())
  category      Category? @relation(fields: [categoryId], references: [id])
  user          User      @relation(fields: [userId], references: [id])
}

model Plan {
  id          String      @id @default(uuid())
  name        String      @unique
  description String?
  isActive    Boolean     @default(true)
  prices      PlanPrice[]
  users       User[]
}

model PlanPrice {
  id           String       @id @default(uuid())
  planId       String
  billingCycle BillingCycle
  priceCents   Int
  isActive     Boolean      @default(true)
  createdAt    DateTime     @default(now())
  plan         Plan         @relation(fields: [planId], references: [id])

  @@unique([planId, billingCycle])
}

model Category {
  id       String    @id @default(uuid())
  name     String    @unique
  emoji    String?
  transactions Transaction[]
}

model FxRate {
  id        String   @id @default(uuid())
  base      String
  target    String
  rate      Decimal  @db.Decimal(20, 8)
  date      DateTime
  fetchedAt DateTime @default(now())

  @@unique([base, target, date])
}

enum BillingCycle {
  MONTHLY
  ANNUAL
}
